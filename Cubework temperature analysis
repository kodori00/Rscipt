library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(chron)
library(rstatix)
library(emmeans)
library(anytime)
library(lubridate)
library(reshape2)


####tail and BAT====
start1<-"2022-03-15 07:00:00"
end1<-"2022-03-17 07:00:00"

t1<-read.csv("datalog_1373.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t1$Timestamp<-as.POSIXct(t1$Timestamp)
t1<- rename(t1,data = "Converted Temp Data")
t1<-t1%>%dplyr::filter((t1$Timestamp>start1 & t1$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t1$Timestamp <- ymd_h(paste(t1$Date, t1$Hour))
t1$Timestamp<-as.POSIXct(t1$Timestamp)

t1<-t1%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t1<-select(t1, "Timestamp", "mean")

colnames(t1)[2]<-5655


t2<-read.csv("datalog_1370.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t2$Timestamp<-as.POSIXct(t2$Timestamp)
t2<- rename(t2,data = "Converted Temp Data")
t2<-t2%>%dplyr::filter((t2$Timestamp>start1 & t2$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t2$Timestamp <- ymd_h(paste(t2$Date, t2$Hour))
t2$Timestamp<-as.POSIXct(t2$Timestamp)

t2<-t2%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t2<-select(t2, "Timestamp", "mean")

colnames(t2)[2]<-5656



t3<-read.csv("datalog_1396.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t3$Timestamp<-as.POSIXct(t3$Timestamp)
t3<- rename(t3,data = "Converted Temp Data")
t3<-t3%>%dplyr::filter((t3$Timestamp>start1 & t3$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t3$Timestamp <- ymd_h(paste(t3$Date, t3$Hour))
t3$Timestamp<-as.POSIXct(t3$Timestamp)

t3<-t3%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t3<-select(t3, "Timestamp", "mean")


colnames(t3)[2]<-126


t4<-read.csv("datalog_1410.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t4$Timestamp<-as.POSIXct(t4$Timestamp)
t4<- rename(t4,data = "Converted Temp Data")
t4<-t4%>%dplyr::filter((t4$Timestamp>start1 & t4$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t4$Timestamp <- ymd_h(paste(t4$Date, t4$Hour))
t4$Timestamp<-as.POSIXct(t4$Timestamp)

t4<-t4%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t4<-select(t4, "Timestamp", "mean")


colnames(t4)[2]<-148

t5<-read.csv("datalog_1405.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t5$Timestamp<-as.POSIXct(t5$Timestamp)
t5<- rename(t5,data = "Converted Temp Data")
t5<-t5%>%dplyr::filter((t5$Timestamp>start1 & t5$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t5$Timestamp <- ymd_h(paste(t5$Date, t5$Hour))
t5$Timestamp<-as.POSIXct(t5$Timestamp)

t5<-t5%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t5<-select(t5, "Timestamp", "mean")

colnames(t5)[2]<-5621


t6<-read.csv("datalog_1404.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t6$Timestamp<-as.POSIXct(t6$Timestamp)
t6<- rename(t6,data = "Converted Temp Data")
t6<-t6%>%dplyr::filter((t6$Timestamp>start1 & t6$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t6$Timestamp <- ymd_h(paste(t6$Date, t6$Hour))
t6$Timestamp<-as.POSIXct(t6$Timestamp)

t6<-t6%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t6<-select(t6, "Timestamp", "mean")

colnames(t6)[2]<-150

t7<-read.csv("datalog_1363.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t7$Timestamp<-as.POSIXct(t7$Timestamp)
t7<- rename(t7,data = "Converted Temp Data")
t7<-t7%>%dplyr::filter((t7$Timestamp>start1 & t7$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t7$Timestamp <- ymd_h(paste(t7$Date, t7$Hour))
t7$Timestamp<-as.POSIXct(t7$Timestamp)

t7<-t7%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t7<-select(t7, "Timestamp", "mean")

colnames(t7)[2]<-5622


t8<-read.csv("datalog_1394.csv",check.names = FALSE) # check.names=FALSE when it cant read csv file
t8$Timestamp<-as.POSIXct(t8$Timestamp)
t8<- rename(t8,data = "Converted Temp Data")
t8<-t8%>%dplyr::filter((t8$Timestamp>start1 & t8$Timestamp<end1))%>%
  select("Timestamp", "data")%>% mutate(Hour = hour(Timestamp))%>%
  mutate(Date = date(Timestamp))
t8$Timestamp <- ymd_h(paste(t8$Date, t8$Hour))
t8$Timestamp<-as.POSIXct(t8$Timestamp)

t8<-t8%>%group_by(Timestamp)%>%dplyr::summarize(mean=mean(data))

t8<-select(t8, "Timestamp", "mean")

colnames(t8)[2]<-151




df<-merge(t1,t2, by = "Timestamp")
df<-merge(df,t3, by = "Timestamp")
df<-merge(df,t4, by = "Timestamp")
df<-merge(df,t5, by = "Timestamp")
df<-merge(df,t6, by = "Timestamp")
df<-merge(df,t7, by = "Timestamp")
df<-merge(df,t8, by = "Timestamp")



df<-df%>%pivot_longer(2:length(colnames(df)),names_to="mouse",values_to="data")

df_meta<-read.csv("ER Meta11.csv")

dff<-merge(df,df_meta, by="mouse")

#for stat
e1<-df%>%mutate(Hour = hour(Timestamp))%>%mutate(zt = case_when (Hour <7 ~ Hour+17, Hour >=7 ~ Hour-7))

e1<-merge(e1,df_meta, by="mouse")
##

dff$Timestamp <- as_datetime(dff$Timestamp)

base <- dff %>% mutate(Hour = hour(Timestamp))
base$Hour<-as.numeric(base$Hour)


base<-base%>%group_by(Hour,mouse)%>%dplyr::summarize(data=mean(data))

base<-merge(base,df_meta, by="mouse")


fw2<- base %>%
  dplyr::filter(Gene == "FWT")
fw2<- rename(fw2, temp = data)
fk2<- base %>%
  dplyr::filter(Gene == "FKO")
fk2<- rename(fk2, temp = data)
## combine two

fk<-rbind(fk,fk2)
fw<-rbind(fw,fw2)

####

fkz<-fk%>%filter(!is.na(temp))%>%group_by(Hour,mouse)%>%dplyr::summarize(value=mean(temp))

fwz<-fw%>%filter(!is.na(temp))%>%group_by(Hour,mouse)%>%dplyr::summarize(value=mean(temp))


ys <- fkz %>%
  group_by(Hour) %>%
  summarise( 
    n=n(),
    mean=mean(value),
    sd=sd(value)
  ) %>%
  mutate( se=sd/sqrt(n))  %>%
  mutate( ic=se * qt((1-0.05)/2 + .5, n-1))

yw <- fwz %>%
  group_by(Hour) %>%
  summarise( 
    n=n(),
    mean=mean(value),
    sd=sd(value)
  ) %>%
  mutate( se=sd/sqrt(n))  %>%
  mutate( ic=se * qt((1-0.05)/2 + .5, n-1))

ys<-ys%>%mutate(zt=c(18,19,20,21,22,23,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17))

yw<-yw%>%mutate(zt=c(18,19,20,21,22,23,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17))

ysse<-select(ys, zt, mean, se)

ywse<-select(yw, zt, mean, se)

ysse<-ysse%>%mutate(group="KO")

ywse<-ywse%>%mutate(group="WT")

zz<-rbind(ysse,ywse)

colnames(ywse)<-c("zt","mean2","se2","group")

z1<-merge(ysse,ywse, by="zt")

#df<-na.omit(df)

#for F
femaleforf<-eee%>%mutate(sex="Female")



brks = seq(0, 23, 1)
#lbs <- ifelse(brks%%6 == 0, format(brks, digits = 1, nsmall = 1), "")

lbs <- c("0","","","","","","6","","","","","","12","","","","","","18","","","","","23")

ms<-list(list(theme_classic()))
ddf<-data.frame("zt_xmin"=c(12+(23.5*(0:3))),"zt_xmax"=c(23.5+(23.5*(0:3))))###use this df below to create automatic shading below
ztset<-list(scale_x_continuous(limits=c(0,23.5),breaks = brks, labels = lbs,expand=c(0.01,0)),
            geom_rect(fill="grey85",data=ddf,inherit.aes=FALSE,aes(xmin=zt_xmin,xmax=zt_xmax),ymin=-Inf,ymax=Inf))
set<-list(scale_y_continuous(limits=c(35,37.5)))


p1<-ggplot(zz, aes(x=zt,y=mean,group=group, colour=group))+ms+ztset+set+
  geom_line()+
  geom_point()+
  geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(0.05))+
  theme_classic()+
  labs(x="Zeitgeber Time",y="T_Core(Â°C)",title="RERKO Female Core_T")+scale_color_manual("", values = c("red", "black"))+  theme(legend.position="none")

p1

##pub version
p1<-ggplot(zz, aes(x=zt,y=mean,group=group, colour=group))+ms+ztset+set+
  geom_line()+
  geom_point()+
  geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=1, position=position_dodge(0.05))+
  theme_classic(base_size=19)+
  labs(x=NULL,y=NULL,title=NULL)+scale_color_manual("", values = c("red", "black"))+  theme(legend.position="none")

p1



##Save(A1)====
ggsave("RERKO T_BAT_hourly Female(A5-p).png",p1,device="png",dpi=300,width=3.2, height=2.4)
